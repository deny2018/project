name: Manage EC2 Instance

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches:
      - main  # 当 master 分支更新时触发

jobs:
  create-ec2:
    name: Create EC2 Instance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Launch EC2 Instance
        id: create-instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-08b5b3a93ed654d19 \
            --instance-type t2.micro \
            --key-name aws-ec2 \
            --security-group-ids sg-0685882e21cc815f3 \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHub-EC2}]' \
            --query 'Instances[0].InstanceId' \
            --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "EC2 Instance $INSTANCE_ID created."

  destroy-ec2:
    name: Destroy EC2 Instance
    runs-on: ubuntu-latest
    needs: create-ec2
    if: github.event_name == 'workflow_dispatch'  # 仅手动触发销毁
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Wait for EC2 Instance to be Running
        run: |
          echo "Waiting for instance $INSTANCE_ID to be in running state..."
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          echo "Instance $INSTANCE_ID is now running."

      - name: Terminate EC2 Instance
        run: |
          aws ec2 terminate-instances --instance-ids $INSTANCE_ID
          echo "EC2 Instance $INSTANCE_ID terminated."
